/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {

     
        KS_VARIABLE_LABEL:'Variable Type',
        KS_variables_declare:'Declare %1 variable Type %2 Name %3 Assigned to %4',
        KS_variables_set:'Set %1 variable by %2',
        KS_variables_change:'Change %1 variable mode %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Set %1 String variable by %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'long',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'string',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'word',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',
        BT_SERIAL_CATEGORY: 'Read Bluetooth',
        BLE_DATA: 'Serial readStringUntil #',
        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logic',
        KS_judge:'%1 %2 %3',

        BUZZER_CATEGORY: 'Passive buzzer',
        BUZZER_TONE: 'Tone PIN#%1 frequency%2',
        BUZZER_TONE_D: 'Tone PIN#%1 frequency%2 duration%3',
        BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
        BUZZER_NOTONE: 'noTone%1',
        MOTOR130_CATEGORY: 'Small fan',
        MOTOR130: 'Small fan INA#%1 State%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'servo',
        KS_SERVO1_ANGLE: 'servo1 PIN#%1 channel%2 degree%3 delay%4',
        KS_SERVO1_READ: 'servo1 PIN#%1 read degree',
        KS_SERVO2_ANGLE: 'servo2 PIN#%1 channel%2 degree%3 delay%4',
        KS_SERVO2_READ: 'servo2 PIN#%1 read degree',
        HC_SR04_CATEGORY: 'Ultrasonic',
        HC_SR04_READ_DISTANCE: 'HC-SR04 trig pin %1 echo pin %2 read distance %3',
        BBRGBLEDSTRIP_CATEGORY: 'RGB LED ',
        BBRGBLEDSTRIP_INIT: 'init RGB LED length %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'set pixel %1 color %2',
        BBRGBLEDSTRIP_FILL: 'fill from pixel %1 count %2 with color %3',
        BBRGBLEDSTRIP_COLOR: 'RGB LED color R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'set brightness %1',
        BBRGBLEDSTRIP_CLEAR: 'clear all',
        BBRGBLEDSTRIP_SHOW: 'refresh',
        RC522_CATEGORY: 'RFID module',
        RC522_INIT: 'init RFID',
        RC522_READ: 'Read the card value',
        DHT_CATEGORY: 'Temperature and humidity',
        DHT_init: ' DHT pin %1 mode %2',
        KE_DHT: ' DHT get %1',
        LCD_CATEGORY: 'LCD1602 IIC',
        LCD_INIT: 'init lcd I2C address %1',
        LCD_SETCURSORPOSITION: 'set lcd cursor position x: %1 y: %2',
        LCD_PRINT: 'lcd print %1',
        LCD_CLEAR: 'clear lcd',
        LCD_SETBACKLIGHT: 'set lcd back light %1',
        LCD_SATE_ON: 'on',
        LCD_SATE_OFF: 'off',
        LCD_SETCURSORSTYLE: 'set lcd cursor %1 style %2',
        LCD_SATE_DISPLAY: 'display',
        LCD_SATE_HIDE: 'hide',
        LCD_STYLE_BLINK: 'blink',
        LCD_STYLE_NOBLINK: 'no-blink',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: 'wifi connect ssid:%1 password:%2',
        WIFI_READ: 'WiFi read',
        CLIENT_PRINT: ' WIFI print %1',
        DHT_PRINT: ' WIFI print DHT %1', 

     

    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {     
        KS_VARIABLE_LABEL:'变量类型',
        KS_variables_declare:'声明 %1 数字变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_declare2:'声明 %1 字符串变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_set:'设置 %1 变量 为 %2',
        KS_variables_change:'设置 %1 变量 模式 %2',
        KS_variables_value: '变量 %1',
        KS_variables_setString:'设置 %1 字符串变量 为 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整数',
        KS_MATH_LONG: '长整数',
        KS_MATH_FLOAT: '小数',
        KS_MATH_BOOLEAN: '布尔',
        KS_MATH_BYTE: '字节',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '无符号整数',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '无符号长整数',
        KS_MATH_UNSIGNED_CHAR: '无符号字符',
        KS_MATH_DOUBLE: '双精度浮点数',
        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',
        KS_LOGIC_LABEL:'逻辑',
        KS_judge:'%1 %2 %3',
        BUZZER_CATEGORY: '无源蜂鸣器',
        BUZZER_TONE: '播放声音 引脚%1 频率%2',
        BUZZER_TONE_D: '播放声音 引脚%1 频率%2 节拍%3',
        BUZZER_MUSIC: '蜂鸣器 引脚%1 播放音乐%2',
        BUZZER_NOTONE: '结束声音 引脚%1',
        MOTOR130_CATEGORY: '小风扇',
        MOTOR130: '小风扇 INA#%1 电平为%2 INB#%3 模拟输出值%4',
        BT_SERIAL_CATEGORY: '读取蓝牙信息',
        BLE_DATA: '接收蓝牙信息 直到接收到#',
        KS_SERVO_CATEGORY: '舵机',
        KS_SERVO1_ANGLE: '舵机1 引脚%1 通道%2 角度%3 延时(毫秒)%4',
        KS_SERVO1_READ: '舵机1 引脚%1 读取度数',
        KS_SERVO2_ANGLE: '舵机2 引脚%1 通道%2 角度%3 延时(毫秒)%4',
        KS_SERVO2_READ: '舵机2 引脚%1 读取度数',
        BBRGBLEDSTRIP_CATEGORY: 'RGB 氛围灯',
        BBRGBLEDSTRIP_INIT: '初始化RGB 氛围灯颗数 %1 引脚 %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: '设置像素 %1 颜色 %2',
        BBRGBLEDSTRIP_FILL: '从像素 %1 开始 到像素 %2 颜色 %3',
        BBRGBLEDSTRIP_COLOR: 'RGB 氛围灯颜色 R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: '设置亮度 %1',
        BBRGBLEDSTRIP_CLEAR: '清除所有',
        BBRGBLEDSTRIP_SHOW: '刷新',   
        RC522_CATEGORY: 'RFID刷卡模块',
        RC522_INIT: '初始化 RFID',
        RC522_READ: '读取卡值',
        DHT_CATEGORY: '温湿度传感器',
        DHT_init: '温湿度引脚 %1 型号 %2',
        KE_DHT: '温湿度获取 %1',
        LCD_CATEGORY: 'LCD1602模块',
        LCD_INIT: '初始化 lcd I2C 地址 %1',
        LCD_SETCURSORPOSITION: 'set lcd 光标位置 x: %1 y: %2',
        LCD_PRINT: 'lcd 打印 %1',
        LCD_CLEAR: '清空 lcd',
        LCD_SETBACKLIGHT: '设置 lcd 背光 %1',
        LCD_SATE_ON: '开',
        LCD_SATE_OFF: '关',
        LCD_SETCURSORSTYLE: '设置 lcd 光标 %1 样式 %2',
        LCD_SATE_DISPLAY: '显示',
        LCD_SATE_HIDE: '隐藏',
        LCD_STYLE_BLINK: '闪烁',
        LCD_STYLE_NOBLINK: '不闪烁',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: '连接WiFi 名称%1 密码%2',
        WIFI_READ: 'WiFi 读取数据',
        CLIENT_PRINT: ' WIFI 打印 %1', 
        DHT_PRINT: ' WIFI 打印温湿度 %1', 
        

    });
    return Blockly;
}

exports = addMsg;
