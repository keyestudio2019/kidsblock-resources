/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        KS_VARIABLE_LABEL:'Variable Type',
        KS_variables_declare:'Declare %1 variable Type %2 Name %3 Assigned to %4',
        KS_variables_set:'Set %1 variable by %2',
        KS_variables_change:'Change %1 variable mode %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Set %1 String variable by %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'long',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'string',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'word',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logic',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED interface %1  state %2 ',
        LED_ON: 'open',
        LED_OFF: 'close',
        LED_ANALOG: 'LED  %1 analogWrite%2 ',
        BUTTON_CATEGORY: 'button',
        BUTTON_READ_STATE: 'interface %1 button was be pushed?',
        BUTTON_READ_VALUE: 'The state value of button in interface %1',
        LIGHTSENSOR_CATEGORY: 'light sensor ',
        LIGHTSENSOR_READ_VALUE: 'read the value of interface %1',
        ANALOGVOICE_CATEGORY: 'Analog voice sensor',
        ANALOGVOICE_READ_VALUE: 'read the value of interface %1',
        BUZZER_CATEGORY: 'Passive buzzer',
        BUZZER_TONE: 'Tone PIN#%1 frequency%2',
        BUZZER_TONE_D: 'Tone PIN#%1 frequency%2 duration%3',
        BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
        BUZZER_NOTONE: 'noTone%1',
        BBRGBLEDSTRIP_CATEGORY: 'RGB',
        BBRGBLEDSTRIP_INIT: 'init RGB length %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'set pixel %1 color %2',
        BBRGBLEDSTRIP_FILL: 'fill from pixel %1 count %2 with color %3',
        BBRGBLEDSTRIP_COLOR: 'RGB color R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'set brightness %1',
        RGB_CHANGE: 'set RGB pin %1 brightness%2  time of full clour change%3',
        RGB_LOOP: 'set RGB pin %1 brightness%2  time of full clour loop%3',
        BBRGBLEDSTRIP_CLEAR: 'clear all',
        BBRGBLEDSTRIP_SHOW: 'display',
        MATIRXDISPLAY_CATEGORY: ' Matrix Display',
        MatirxDisplay_INIT: 'init  matrix display  %1',
        MatirxDisplay_DRAWPIXEL: ' martix display draw pixel x: %1 y: %2',
        MatirxDisplay_COLOR_RED: 'red',
        MatirxDisplay_COLOR_BLACK: 'black',
        MatirxDisplay_DRAWLINE: ' martix display draw line x0: %1 y0: %2, x1: %3 y1: %4',
        MatirxDisplay_DRAWRECTANGLE: 'martix display draw rectangle x: %1 y: %2 :width %3 length: %4',
        MatirxDisplay_DRAWCIRCLE: 'martix display draw circle x: %1 y: %2 :radius %3 ',
        MatirxDisplay_SHOWCHAR: ' martix display show char or number: %1',
        MatirxDisplay_SHOW_LOOP: ' martix display loop show : %1',
        MatirxDisplay_IMAGE: ' martix display image %1'
      
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        KS_VARIABLE_LABEL:'变量类型',
        KS_variables_declare:'声明 %1 数字变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_declare2:'声明 %1 字符串变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_set:'设置 %1 变量 为 %2',
        KS_variables_change:'设置 %1 变量 模式 %2',
        KS_variables_value: '变量 %1',
        KS_variables_setString:'设置 %1 字符串变量 为 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整数',
        KS_MATH_LONG: '长整数',
        KS_MATH_FLOAT: '小数',
        KS_MATH_BOOLEAN: '布尔',
        KS_MATH_BYTE: '字节',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '无符号整数',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '无符号长整数',
        KS_MATH_UNSIGNED_CHAR: '无符号字符',
        KS_MATH_DOUBLE: '双精度浮点数',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'逻辑',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED灯 %1 状态为 %2',
        LED_ON: '点亮',
        LED_OFF: '熄灭',
        LED_ANALOG: 'LED灯 %1 模拟输出%2',
        BUTTON_CATEGORY: '按键开关',
        BUTTON_READ_STATE: '按键 %1 是否被按下？',
        BUTTON_READ_VALUE: '按键 %1 的状态值',
        LIGHTSENSOR_CATEGORY: '光线传感器',
        LIGHTSENSOR_READ_VALUE: '读取接口 %1光线强度',
        ANALOGVOICE_CATEGORY: '声音传感器',
        ANALOGVOICE_READ_VALUE: '读取接口 %1 声音强度',
        BUZZER_CATEGORY: '无源蜂鸣器',
        BUZZER_TONE: '播放声音 引脚%1 频率%2',
        BUZZER_TONE_D: '播放声音 引脚%1 频率%2 节拍%3',
        BUZZER_MUSIC: '蜂鸣器 引脚%1 播放音乐%2',
        BUZZER_NOTONE: '结束声音 引脚%1',
        BBRGBLEDSTRIP_CATEGORY: 'RGB',
     
        BBRGBLEDSTRIP_INIT: '初始化RGB 灯颗数 %1 引脚 %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: '设置像素 %1 颜色 %2',
        BBRGBLEDSTRIP_FILL: '从像素 %1 开始 到像素 %2 颜色 %3',
        BBRGBLEDSTRIP_COLOR: 'RGB 颜色 R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: '设置亮度 %1',
        RGB_CHANGE: '设置RGB引脚%1 亮度%2  七彩变化时间%3',
        RGB_LOOP: '设置RGB引脚%1 亮度%2  七彩循环时间%3',
        BBRGBLEDSTRIP_CLEAR: '清除所有',
        BBRGBLEDSTRIP_SHOW: '显示', 
        MATIRXDISPLAY_CATEGORY: '点阵屏',
        MatirxDisplay_INIT: '初始化点阵屏 %1',
        MatirxDisplay_DRAWPIXEL: '点阵屏绘制点 x: %1 y: %2 ',
        MatirxDisplay_COLOR_RED: '红色',
        MatirxDisplay_COLOR_BLACK: '黑色',
        MatirxDisplay_DRAWLINE: '点阵屏绘制直线 x0: %1 y0: %2, x1: %3 y1: %4',
        MatirxDisplay_DRAWRECTANGLE: '点阵屏绘制长方形 x: %1 y: %2 宽: %3 长: %4',
        MatirxDisplay_DRAWCIRCLE: '点阵屏绘制圆形 x: %1 y: %2 半径: %3 ',
        MatirxDisplay_SHOWCHAR: '点阵屏 显示字符或数字: %1',
        MatirxDisplay_SHOW_LOOP: '点阵屏 滚动显示: %1',
        MatirxDisplay_IMAGE: '点阵屏显示图片 %1' 
    });
    return Blockly;
}

exports = addMsg;
